{"version":3,"sources":["../src/completions.js"],"names":["Completion","value","location","target","NormalCompletion","AbruptCompletion","ThrowCompletion","nativeStack","Error","stack","ContinueCompletion","BreakCompletion","ReturnCompletion","JoinedAbruptCompletions","realm","joinCondition","consequent","consequentEffects","alternate","alternateEffects","intrinsics","empty","PossiblyNormalCompletion","loc","expressionLocation"],"mappings":";;;;;;;AAYA;;;;AAEA;;;;;;;;0JAdA;;;;;;;;;IAgBaA,U,WAAAA,U,GACX,oBAAYC,KAAZ,EAA0BC,QAA1B,EAA8DC,MAA9D,EAAgF;AAAA;;AAC9E,OAAKF,KAAL,GAAaA,KAAb;AACA,OAAKE,MAAL,GAAcA,MAAd;AACA,OAAKD,QAAL,GAAgBA,QAAhB;AACD,C;;AAOH;;;IACaE,gB,WAAAA,gB;;;;;;;;;;EAAyBJ,U;;AAEtC;AACA;;;IACaK,gB,WAAAA,gB;;;;;;;;;;EAAyBL,U;;IAEzBM,e,WAAAA,e;;;AACX,2BAAYL,KAAZ,EAA0BC,QAA1B,EAA8DK,WAA9D,EAAqF;AAAA;;AAAA,mIAC7EN,KAD6E,EACtEC,QADsE;;AAEnF,WAAKK,WAAL,GAAmBA,eAAe,IAAIC,KAAJ,GAAYC,KAA9C;AAFmF;AAGpF;;;EAJkCJ,gB;;IAQxBK,kB,WAAAA,kB;;;AACX,8BAAYT,KAAZ,EAA0BC,QAA1B,EAA8DC,MAA9D,EAA+E;AAAA;;AAAA,mIACvEF,KADuE,EAChEC,QADgE,EACtDC,MADsD;AAE9E;;;EAHqCE,gB;;IAM3BM,e,WAAAA,e;;;AACX,2BAAYV,KAAZ,EAA0BC,QAA1B,EAA8DC,MAA9D,EAA+E;AAAA;;AAAA,6HACvEF,KADuE,EAChEC,QADgE,EACtDC,MADsD;AAE9E;;;EAHkCE,gB;;IAMxBO,gB,WAAAA,gB;;;AACX,4BAAYX,KAAZ,EAA0BC,QAA1B,EAA8D;AAAA;;AAAA,+HACtDD,KADsD,EAC/CC,QAD+C;AAE7D;;;EAHmCG,gB;;IAMzBQ,uB,WAAAA,uB;;;AACX,mCACEC,KADF,EAEEC,aAFF,EAGEC,UAHF,EAIEC,iBAJF,EAKEC,SALF,EAMEC,gBANF,EAOE;AAAA;;AAAA,mJACML,MAAMM,UAAN,CAAiBC,KADvB,EAC8BL,WAAWd,QADzC;;AAEA,WAAKa,aAAL,GAAqBA,aAArB;AACA,WAAKC,UAAL,GAAkBA,UAAlB;AACA,WAAKC,iBAAL,GAAyBA,iBAAzB;AACA,WAAKC,SAAL,GAAiBA,SAAjB;AACA,WAAKC,gBAAL,GAAwBA,gBAAxB;AANA;AAOD;;;EAf0Cd,gB;;AAwB7C;AACA;AACA;;;IACaiB,wB,WAAAA,wB;;;AACX,oCACErB,KADF,EAEEc,aAFF,EAGEC,UAHF,EAIEC,iBAJF,EAKEC,SALF,EAMEC,gBANF,EAOE;AAAA;;AACA,6BACEH,sBAAsBZ,gBAAtB,IACEY,kCADF,IAEEE,qBAAqBd,gBAFvB,IAGEc,iCAJJ;AAMA,6BAAUF,sBAAsBX,gBAAtB,IAA0Ca,qBAAqBb,gBAAzE;AACA,6BACEJ,UAAUe,UAAV,IACEA,sBAAsBX,gBADxB,IAEGW,sBAAsBZ,gBAAtB,IAA0CH,UAAUe,WAAWf,KAHpE;AAKA,6BACEA,UAAUiB,SAAV,IACEA,qBAAqBb,gBADvB,IAEGa,qBAAqBd,gBAArB,IAAyCH,UAAUiB,UAAUjB,KAHlE;AAKA,QAAIsB,MACFP,sBAAsBX,gBAAtB,GACIW,WAAWd,QADf,GAEIgB,qBAAqBlB,UAArB,GAAkCkB,UAAUhB,QAA5C,GAAuDgB,UAAUM,kBAHvE;;AAlBA,qJAsBMvB,KAtBN,EAsBasB,GAtBb;;AAuBA,WAAKR,aAAL,GAAqBA,aAArB;AACA,WAAKC,UAAL,GAAkBA,UAAlB;AACA,WAAKC,iBAAL,GAAyBA,iBAAzB;AACA,WAAKC,SAAL,GAAiBA,SAAjB;AACA,WAAKC,gBAAL,GAAwBA,gBAAxB;AA3BA;AA4BD;;;EApC2Cf,gB","file":"completions.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { BabelNodeSourceLocation } from \"babel-types\";\nimport invariant from \"./invariant.js\";\nimport type { Effects, Realm } from \"./realm.js\";\nimport { AbstractValue, Value } from \"./values/index.js\";\n\nexport class Completion {\n  constructor(value: Value, location: ?BabelNodeSourceLocation, target?: ?string) {\n    this.value = value;\n    this.target = target;\n    this.location = location;\n  }\n\n  value: Value;\n  target: ?string;\n  location: ?BabelNodeSourceLocation;\n}\n\n// Normal completions are returned just like spec completions\nexport class NormalCompletion extends Completion {}\n\n// Abrupt completions are thrown as exeptions, to make it a easier\n// to quickly get to the matching high level construct.\nexport class AbruptCompletion extends Completion {}\n\nexport class ThrowCompletion extends AbruptCompletion {\n  constructor(value: Value, location: ?BabelNodeSourceLocation, nativeStack?: ?string) {\n    super(value, location);\n    this.nativeStack = nativeStack || new Error().stack;\n  }\n\n  nativeStack: string;\n}\nexport class ContinueCompletion extends AbruptCompletion {\n  constructor(value: Value, location: ?BabelNodeSourceLocation, target: ?string) {\n    super(value, location, target);\n  }\n}\n\nexport class BreakCompletion extends AbruptCompletion {\n  constructor(value: Value, location: ?BabelNodeSourceLocation, target: ?string) {\n    super(value, location, target);\n  }\n}\n\nexport class ReturnCompletion extends AbruptCompletion {\n  constructor(value: Value, location: ?BabelNodeSourceLocation) {\n    super(value, location);\n  }\n}\n\nexport class JoinedAbruptCompletions extends AbruptCompletion {\n  constructor(\n    realm: Realm,\n    joinCondition: AbstractValue,\n    consequent: AbruptCompletion,\n    consequentEffects: Effects,\n    alternate: AbruptCompletion,\n    alternateEffects: Effects\n  ) {\n    super(realm.intrinsics.empty, consequent.location);\n    this.joinCondition = joinCondition;\n    this.consequent = consequent;\n    this.consequentEffects = consequentEffects;\n    this.alternate = alternate;\n    this.alternateEffects = alternateEffects;\n  }\n\n  joinCondition: AbstractValue;\n  consequent: AbruptCompletion;\n  consequentEffects: Effects;\n  alternate: AbruptCompletion;\n  alternateEffects: Effects;\n}\n\n// Possibly normal completions have to be treated like normal completions\n// and are thus never thrown. At the end of a try block or loop body, however,\n// action must be taken to deal with the possibly abrupt case of the completion.\nexport class PossiblyNormalCompletion extends NormalCompletion {\n  constructor(\n    value: Value,\n    joinCondition: AbstractValue,\n    consequent: Completion | Value,\n    consequentEffects: Effects,\n    alternate: Completion | Value,\n    alternateEffects: Effects\n  ) {\n    invariant(\n      consequent instanceof NormalCompletion ||\n        consequent instanceof Value ||\n        alternate instanceof NormalCompletion ||\n        alternate instanceof Value\n    );\n    invariant(consequent instanceof AbruptCompletion || alternate instanceof AbruptCompletion);\n    invariant(\n      value === consequent ||\n        consequent instanceof AbruptCompletion ||\n        (consequent instanceof NormalCompletion && value === consequent.value)\n    );\n    invariant(\n      value === alternate ||\n        alternate instanceof AbruptCompletion ||\n        (alternate instanceof NormalCompletion && value === alternate.value)\n    );\n    let loc =\n      consequent instanceof AbruptCompletion\n        ? consequent.location\n        : alternate instanceof Completion ? alternate.location : alternate.expressionLocation;\n    super(value, loc);\n    this.joinCondition = joinCondition;\n    this.consequent = consequent;\n    this.consequentEffects = consequentEffects;\n    this.alternate = alternate;\n    this.alternateEffects = alternateEffects;\n  }\n\n  joinCondition: AbstractValue;\n  consequent: Completion | Value;\n  consequentEffects: Effects;\n  alternate: Completion | Value;\n  alternateEffects: Effects;\n}\n"]}