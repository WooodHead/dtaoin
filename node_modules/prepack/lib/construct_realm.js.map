{"version":3,"sources":["../src/construct_realm.js"],"names":["opts","r","i","intrinsics","$GlobalObject","ObjectPrototype","name","evaluators","partialEvaluators","$GlobalEnv"],"mappings":";;;;;;kBAoBe,YAAyC;AAAA,MAAhCA,IAAgC,uEAAX,EAAW;;AACtD,MAAIC,IAAI,iBAAUD,IAAV,CAAR;AACA,MAAIE,IAAID,EAAEE,UAAV;AACA,yBAAqBD,CAArB,EAAwBD,CAAxB;AACA;AACA;AACAA,IAAEG,aAAF,GAAkB,wBAAgBH,CAAhB,EAAmBC,EAAEG,eAArB,EAAsC,QAAtC,CAAlB;AACA,wBAAiBJ,CAAjB;AACA,OAAK,IAAIK,IAAT,IAAiBC,UAAjB;AAA6BN,MAAEM,UAAF,CAAaD,IAAb,IAAqBC,WAAWD,IAAX,CAArB;AAA7B,GACA,KAAK,IAAIA,KAAT,IAAiBE,iBAAjB;AAAoCP,MAAEO,iBAAF,CAAoBF,KAApB,IAA4BE,kBAAkBF,KAAlB,CAA5B;AAApC,GACAL,EAAEQ,UAAF,GAAe,kCAAqBR,CAArB,EAAwBA,EAAEG,aAA1B,EAAyCH,EAAEG,aAA3C,CAAf;AACA,SAAOH,CAAP;AACD,C;;AArBD;;AACA;;AACA;;;;AAEA;;IAAYM,U;;AACZ;;IAAYC,iB;;AACZ;;AACA","file":"construct_realm.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport { Realm } from \"./realm.js\";\nimport { initialize as initializeIntrinsics } from \"./intrinsics/index.js\";\nimport initializeGlobal from \"./intrinsics/ecma262/global.js\";\nimport type { RealmOptions } from \"./options.js\";\nimport * as evaluators from \"./evaluators/index.js\";\nimport * as partialEvaluators from \"./partial-evaluators/index.js\";\nimport { NewGlobalEnvironment } from \"./methods/index.js\";\nimport { ObjectValue } from \"./values/index.js\";\n\nexport default function(opts: RealmOptions = {}): Realm {\n  let r = new Realm(opts);\n  let i = r.intrinsics;\n  initializeIntrinsics(i, r);\n  // TODO: Find a way to let different environments initialize their own global\n  // object for special magic host objects such as the window object in the DOM.\n  r.$GlobalObject = new ObjectValue(r, i.ObjectPrototype, \"global\");\n  initializeGlobal(r);\n  for (let name in evaluators) r.evaluators[name] = evaluators[name];\n  for (let name in partialEvaluators) r.partialEvaluators[name] = partialEvaluators[name];\n  r.$GlobalEnv = NewGlobalEnvironment(r, r.$GlobalObject, r.$GlobalObject);\n  return r;\n}\n"]}