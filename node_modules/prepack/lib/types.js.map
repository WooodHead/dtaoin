{"version":3,"sources":["../src/types.js"],"names":["ElementSize","Float32","Float64","Int8","Int16","Int32","Uint8","Uint16","Uint32","Uint8Clamped"],"mappings":";;;;;;;AAyBA;;AA4PA;AArRA;;;;;;;;;AA2BO,IAAMA,oCAAc;AACzBC,WAAS,CADgB;AAEzBC,WAAS,CAFgB;AAGzBC,QAAM,CAHmB;AAIzBC,SAAO,CAJkB;AAKzBC,SAAO,CALkB;AAMzBC,SAAO,CANkB;AAOzBC,UAAQ,CAPiB;AAQzBC,UAAQ,CARiB;AASzBC,gBAAc;AATW,CAApB;;AA0CP;;AAOA;;AAIA","file":"types.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type {\n  NumberValue,\n  AbstractValue,\n  BooleanValue,\n  NativeFunctionValue,\n  FunctionValue,\n  StringValue,\n  SymbolValue,\n  UndefinedValue,\n  NullValue,\n  EmptyValue,\n  Value,\n  AbstractObjectValue,\n} from \"./values/index.js\";\nimport { ObjectValue } from \"./values/index.js\";\n\nexport const ElementSize = {\n  Float32: 4,\n  Float64: 8,\n  Int8: 1,\n  Int16: 2,\n  Int32: 4,\n  Uint8: 1,\n  Uint16: 2,\n  Uint32: 4,\n  Uint8Clamped: 1,\n};\n\nexport type IterationKind = \"key+value\" | \"value\" | \"key\";\n\nexport type SourceType = \"module\" | \"script\";\n\nexport type SourceFile = {\n  filePath: string,\n  fileContents: string,\n  sourceMapContents?: string,\n};\n\nexport type SourceMap = {\n  sources: Array<string>,\n  names: Array<string>,\n  mappings: string,\n  sourcesContent: Array<string>,\n};\n\nexport type AbstractTime = \"early\" | \"late\";\n\nexport type ElementType =\n  | \"Float32\"\n  | \"Float64\"\n  | \"Int8\"\n  | \"Int16\"\n  | \"Int32\"\n  | \"Uint8\"\n  | \"Uint16\"\n  | \"Uint32\"\n  | \"Uint8Clamped\";\n\n//\n\ndeclare class _CallableObjectValue extends ObjectValue {\n  $Call: void | ((thisArgument: Value, argsList: Array<Value>) => Value),\n}\nexport type CallableObjectValue = _CallableObjectValue | FunctionValue | NativeFunctionValue;\n\n//\n\nexport type DataBlock = Uint8Array;\n\n//\n\nexport type Descriptor = {\n  writable?: boolean,\n  enumerable?: boolean,\n  configurable?: boolean,\n\n  // If value.IsEmpty is true then this descriptor indicates that the\n  // corresponding property has been deleted.\n  value?: Value,\n\n  get?: UndefinedValue | CallableObjectValue | AbstractValue,\n  set?: UndefinedValue | CallableObjectValue | AbstractValue,\n};\n\nexport type PropertyBinding = {\n  descriptor?: Descriptor,\n  object: ObjectValue | AbstractObjectValue,\n  key: any,\n};\n\nexport type LexicalEnvironmentTypes = \"global\" | \"module\" | \"script\" | \"function\" | \"block\" | \"catch\" | \"loop\" | \"with\";\n\nexport type PropertyKeyValue = string | StringValue | SymbolValue;\n\nexport type Intrinsics = {\n  undefined: UndefinedValue,\n  empty: EmptyValue,\n  null: NullValue,\n  false: BooleanValue,\n  true: BooleanValue,\n  NaN: NumberValue,\n  Infinity: NumberValue,\n  negativeInfinity: NumberValue,\n  zero: NumberValue,\n  negativeZero: NumberValue,\n  emptyString: StringValue,\n\n  SymbolHasInstance: SymbolValue,\n  SymbolIsConcatSpreadable: SymbolValue,\n  SymbolSpecies: SymbolValue,\n  SymbolReplace: SymbolValue,\n  SymbolIterator: SymbolValue,\n  SymbolSplit: SymbolValue,\n  SymbolToPrimitive: SymbolValue,\n  SymbolToStringTag: SymbolValue,\n  SymbolMatch: SymbolValue,\n  SymbolSearch: SymbolValue,\n  SymbolUnscopables: SymbolValue,\n\n  ObjectPrototype: ObjectValue,\n  FunctionPrototype: NativeFunctionValue,\n  ArrayPrototype: ObjectValue,\n  RegExpPrototype: ObjectValue,\n  DatePrototype: ObjectValue,\n  Boolean: NativeFunctionValue,\n  BooleanPrototype: ObjectValue,\n\n  Error: NativeFunctionValue,\n  ErrorPrototype: ObjectValue,\n  ReferenceError: NativeFunctionValue,\n  ReferenceErrorPrototype: ObjectValue,\n  SyntaxError: NativeFunctionValue,\n  SyntaxErrorPrototype: ObjectValue,\n  TypeError: NativeFunctionValue,\n  TypeErrorPrototype: ObjectValue,\n  URIError: NativeFunctionValue,\n  URIErrorPrototype: ObjectValue,\n  EvalError: NativeFunctionValue,\n  EvalErrorPrototype: ObjectValue,\n  JSON: ObjectValue,\n  Reflect: ObjectValue,\n  Proxy: NativeFunctionValue,\n  RangeError: NativeFunctionValue,\n  RangeErrorPrototype: ObjectValue,\n  ArrayIteratorPrototype: ObjectValue,\n  StringIteratorPrototype: ObjectValue,\n  IteratorPrototype: ObjectValue,\n  SetIteratorPrototype: ObjectValue,\n  MapIteratorPrototype: ObjectValue,\n  Number: NativeFunctionValue,\n  NumberPrototype: ObjectValue,\n  Symbol: NativeFunctionValue,\n  SymbolPrototype: ObjectValue,\n  StringPrototype: ObjectValue,\n  Object: NativeFunctionValue,\n  Function: NativeFunctionValue,\n  Array: NativeFunctionValue,\n  RegExp: NativeFunctionValue,\n  Date: NativeFunctionValue,\n  String: NativeFunctionValue,\n  Math: ObjectValue,\n  isNaN: NativeFunctionValue,\n  parseInt: NativeFunctionValue,\n  parseFloat: NativeFunctionValue,\n  isFinite: NativeFunctionValue,\n  decodeURI: NativeFunctionValue,\n  decodeURIComponent: NativeFunctionValue,\n  encodeURI: NativeFunctionValue,\n  encodeURIComponent: NativeFunctionValue,\n  ThrowTypeError: NativeFunctionValue,\n  ArrayProto_values: NativeFunctionValue,\n  ArrayProto_toString: NativeFunctionValue,\n  ObjectProto_toString: NativeFunctionValue,\n  TypedArrayProto_values: NativeFunctionValue,\n  eval: NativeFunctionValue,\n  console: ObjectValue,\n  document: ObjectValue,\n  process: ObjectValue,\n\n  DataView: NativeFunctionValue,\n  DataViewPrototype: ObjectValue,\n  TypedArray: NativeFunctionValue,\n  TypedArrayPrototype: ObjectValue,\n  Float32Array: NativeFunctionValue,\n  Float32ArrayPrototype: ObjectValue,\n  Float64Array: NativeFunctionValue,\n  Float64ArrayPrototype: ObjectValue,\n  Int8Array: NativeFunctionValue,\n  Int8ArrayPrototype: ObjectValue,\n  Int16Array: NativeFunctionValue,\n  Int16ArrayPrototype: ObjectValue,\n  Int32Array: NativeFunctionValue,\n  Int32ArrayPrototype: ObjectValue,\n  Map: NativeFunctionValue,\n  MapPrototype: ObjectValue,\n  WeakMap: NativeFunctionValue,\n  WeakMapPrototype: ObjectValue,\n  Set: NativeFunctionValue,\n  SetPrototype: ObjectValue,\n  Promise: NativeFunctionValue,\n  PromisePrototype: ObjectValue,\n  Uint8Array: NativeFunctionValue,\n  Uint8ArrayPrototype: ObjectValue,\n  Uint8ClampedArray: NativeFunctionValue,\n  Uint8ClampedArrayPrototype: ObjectValue,\n  Uint16Array: NativeFunctionValue,\n  Uint16ArrayPrototype: ObjectValue,\n  Uint32Array: NativeFunctionValue,\n  Uint32ArrayPrototype: ObjectValue,\n  WeakSet: NativeFunctionValue,\n  WeakSetPrototype: ObjectValue,\n  ArrayBuffer: NativeFunctionValue,\n  ArrayBufferPrototype: ObjectValue,\n\n  Generator: ObjectValue,\n  GeneratorPrototype: ObjectValue,\n  GeneratorFunction: NativeFunctionValue,\n\n  __IntrospectionError: NativeFunctionValue,\n  __IntrospectionErrorPrototype: ObjectValue,\n};\n\nexport type PromiseCapability = {\n  promise: ObjectValue | UndefinedValue,\n  resolve: Value,\n  reject: Value,\n};\n\nexport type PromiseReaction = {\n  capabilities: PromiseCapability,\n  handler: Value,\n};\n\nexport type ResolvingFunctions = {\n  resolve: Value,\n  reject: Value,\n};\n\nexport type TypedArrayKind =\n  | \"Float32Array\"\n  | \"Float64Array\"\n  | \"Int8Array\"\n  | \"Int16Array\"\n  | \"Int32Array\"\n  | \"Uint8Array\"\n  | \"Uint16Array\"\n  | \"Uint32Array\"\n  | \"Uint8ClampedArray\";\n\nexport type ObjectKind =\n  | \"Object\"\n  | \"Array\"\n  | \"Function\"\n  | \"Symbol\"\n  | \"String\"\n  | \"Number\"\n  | \"Boolean\"\n  | \"Date\"\n  | \"RegExp\"\n  | \"Set\"\n  | \"Map\"\n  | \"DataView\"\n  | \"ArrayBuffer\"\n  | \"WeakMap\"\n  | \"WeakSet\"\n  | TypedArrayKind;\n// TODO #26: Promises. All kinds of iterators. Generators.\n"]}