{"version":3,"sources":["../../../src/intrinsics/node/contextify.js"],"names":["realm","intrinsicName","obj","intrinsics","ObjectPrototype","runInDebugContextImpl","code","createErrorThrowCompletion","Error","makeContextImpl","isContextImpl","false","ContextifyScriptInternal","ast","ContextifyScriptConstructor","context","args","argLength","newTarget","proto","ContextifyScriptPrototype","options","filename","getFilenameArg","lineOffset","getLineOffsetArg","columnOffset","getColumnOffsetArg","displayErrors","getDisplayErrorsArg","cachedDataBuf","getCachedData","produceCachedData","getProduceCachedData","resolvedOptions","undefined","intrinsicConstructor","JSON","stringify","self","length","true","transform","e","decorateErrorStack","$InternalSlot","runInDebugContext","makeContext","isContext","ContextifyScript","runInThisContext","timeout","getTimeoutArg","breakOnSigint","getBreakOnSigintArg","evalMachine","runInContext","sandbox","completion","error","value","errorData","$ErrorData","errorLocation","locationData","stackDecorated","stack","lines","sourceCode","split","line","loc","arrow","repeat","column","decoratedStack","TypeError","RangeError","defaultFilename","Uint8Array","$ViewedArrayBuffer","$ArrayBufferData","defaultLineOffset","defaultColumnOffset","script","environment","$GlobalEnv","previousContext","getRunningContext","suspend","createExecutionContext","lexicalEnvironment","variableEnvironment","pushContext","result","evaluateCompletion","popContext","resume","defineNativeMethod","writable","enumerable","configurable","patchedCode","replace","transformedCode","plugins","retainLines"],"mappings":"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","file":"contextify.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport invariant from \"../../invariant.js\";\nimport { Realm } from \"../../realm.js\";\nimport { AbruptCompletion, ThrowCompletion } from \"../../completions.js\";\nimport {\n  Value,\n  ConcreteValue,\n  BooleanValue,\n  EmptyValue,\n  NativeFunctionValue,\n  ObjectValue,\n  StringValue,\n  UndefinedValue,\n} from \"../../values/index.js\";\nimport {\n  DefinePropertyOrThrow,\n  Set,\n  Get,\n  GetFunctionRealm,\n  ToBoolean,\n  ToInteger,\n  ToString,\n} from \"../../methods/index.js\";\nimport parse from \"../../utils/parse.js\";\nimport type { BabelNodeFile } from \"babel-types\";\n\n// TODO: This creates a strong dependency on babel and its transforms even\n// outside of devDependencies which is unfortunate. Get rid of this once classes\n// and destructuring is fully implemented.\nimport { transform as babelTransform } from \"babel-core\";\n\n// Hook for transpiling\nfunction transform(code: string, filename: string): string {\n  let patchedCode = code.replace(\n    // Work around the fact that Babel classes can't extend natives.\n    /class FastBuffer extends Uint8Array {\\s+constructor\\(arg1, arg2, arg3\\) {\\s+super\\(arg1, arg2, arg3\\);\\s+}\\s+}/g,\n    \"function FastBuffer(arg1, arg2, arg3) {\\n\" +\n      \"  var self = new Uint8Array(arg1, arg2, arg3);\\n\" +\n      \"  Object.setPrototypeOf(self, FastBuffer.prototype);\\n\" +\n      \"  return self;\\n\" +\n      \"}; Object.setPrototypeOf(FastBuffer, Uint8Array); Object.setPrototypeOf(FastBuffer.prototype, Uint8Array.prototype);\"\n  );\n  let transformedCode = babelTransform(patchedCode, {\n    plugins: [\n      // Prepack doesn't support classes or destructuring yet.\n      \"transform-es2015-classes\",\n      \"transform-es2015-destructuring\",\n      \"transform-es2015-parameters\",\n    ],\n    retainLines: true,\n  });\n  return transformedCode.code;\n}\n\nexport default function(realm: Realm): ObjectValue {\n  let intrinsicName = 'process.binding(\"contextify\")';\n  let obj = new ObjectValue(realm, realm.intrinsics.ObjectPrototype, intrinsicName);\n\n  // Contextify\n\n  function runInDebugContextImpl(code) {\n    // TODO: Make this an abstract result.\n    throw realm.createErrorThrowCompletion(\n      realm.intrinsics.Error,\n      \"The V8 debugger is not available from within Prepack.\"\n    );\n  }\n\n  function makeContextImpl() {\n    // TODO: Allow sub-realms to be created and restored.\n    throw realm.createErrorThrowCompletion(realm.intrinsics.Error, \"makeContext is not yet implemented in Prepack.\");\n  }\n\n  function isContextImpl() {\n    // TODO: We don't have a way to create contexts so this is always false.\n    return realm.intrinsics.false;\n  }\n\n  // ContextifyScript\n\n  class ContextifyScriptInternal {\n    ast: BabelNodeFile;\n    constructor(ast: BabelNodeFile) {\n      this.ast = ast;\n    }\n  }\n\n  function ContextifyScriptConstructor(context, args, argLength, newTarget) {\n    if (!newTarget) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.Error, \"Must call vm.Script as a constructor.\");\n    }\n    let proto = Get(realm, newTarget, \"prototype\");\n    if (!(proto instanceof ObjectValue)) {\n      realm = GetFunctionRealm(realm, newTarget);\n      proto = ContextifyScriptPrototype;\n    }\n\n    invariant(args[0] instanceof ConcreteValue);\n    let code = ToString(realm, args[0]);\n\n    let options = args[1];\n    let filename = getFilenameArg(options);\n    let lineOffset = getLineOffsetArg(options);\n    let columnOffset = getColumnOffsetArg(options);\n    let displayErrors = getDisplayErrorsArg(options);\n    let cachedDataBuf = getCachedData(options);\n    let produceCachedData = getProduceCachedData(options);\n\n    let resolvedOptions = {\n      filename: filename,\n      lineOffset: lineOffset,\n      columnOffset: columnOffset,\n      displayErrors: displayErrors,\n      cachedDataBuf: undefined, // Not serializable.\n      produceCachedData: produceCachedData,\n    };\n\n    let intrinsicConstructor = `new (${intrinsicName}).ContextifyScript(${JSON.stringify(code)}, ${JSON.stringify(\n      resolvedOptions\n    )})`;\n\n    let self = new ObjectValue(realm, proto, intrinsicConstructor);\n\n    if (cachedDataBuf.length) {\n      Set(realm, obj, \"cachedDataRejected\", realm.intrinsics.true, true);\n    }\n\n    if (produceCachedData) {\n      Set(realm, obj, \"cachedDataProduced\", realm.intrinsics.false, true);\n    }\n\n    let ast;\n    try {\n      // TODO: Somehow pass columnOffset to Babylon.\n      ast = parse(realm, transform(code, filename), filename, \"script\", 1 + lineOffset);\n    } catch (e) {\n      if (displayErrors && e instanceof ThrowCompletion) {\n        decorateErrorStack(e);\n      }\n      throw e;\n    }\n    // TODO: Pick up source map files and automatically fix up source locations.\n\n    self.$InternalSlot = new ContextifyScriptInternal(ast);\n\n    return self;\n  }\n\n  let runInDebugContext = new NativeFunctionValue(\n    realm,\n    `${intrinsicName}.runInDebugContext`,\n    \"runInDebugContext\",\n    0,\n    runInDebugContextImpl\n  );\n  Set(realm, obj, \"runInDebugContext\", runInDebugContext, true);\n\n  let makeContext = new NativeFunctionValue(realm, `${intrinsicName}.makeContext`, \"makeContext\", 0, makeContextImpl);\n  Set(realm, obj, \"makeContext\", makeContext, true);\n\n  let isContext = new NativeFunctionValue(realm, `${intrinsicName}.isContext`, \"isContext\", 0, isContextImpl);\n  Set(realm, obj, \"isContext\", isContext, true);\n\n  let ContextifyScript = new NativeFunctionValue(\n    realm,\n    `${intrinsicName}.ContextifyScript`,\n    \"ContextifyScript\",\n    0,\n    ContextifyScriptConstructor,\n    true\n  );\n  Set(realm, obj, \"ContextifyScript\", ContextifyScript, true);\n\n  // ContextifyScript.prototype\n\n  function runInThisContext(self, args) {\n    let timeout = getTimeoutArg(args[0]);\n    let displayErrors = getDisplayErrorsArg(args[0]);\n    let breakOnSigint = getBreakOnSigintArg(args[0]);\n    return evalMachine(self, timeout, displayErrors, breakOnSigint);\n  }\n\n  function runInContext(self, [sandbox, options]) {\n    throw realm.createErrorThrowCompletion(\n      realm.intrinsics.Error,\n      \"Cannot run in arbitrary contexts within Prepack yet.\"\n    );\n  }\n\n  function decorateErrorStack(completion: AbruptCompletion): void {\n    let error = completion.value;\n    if (!(error instanceof ObjectValue)) {\n      return;\n    }\n\n    let errorData = error.$ErrorData;\n    if (!errorData) {\n      return;\n    }\n    let errorLocation = errorData.locationData;\n    if (!errorLocation || errorLocation.stackDecorated) {\n      return;\n    }\n\n    let stack = Get(realm, error, \"stack\");\n    if (!(stack instanceof StringValue)) {\n      return;\n    }\n\n    let lines = errorLocation.sourceCode.split(/\\r?\\n/);\n    let line = lines[errorLocation.loc.line - 1] || \"\";\n    let arrow = \" \".repeat(errorLocation.loc.column) + \"^\";\n    let decoratedStack = `${errorLocation.filename}:${errorLocation.loc.line}\\n${line}\\n${arrow}\\n${stack.value}`;\n    Set(realm, error, \"stack\", new StringValue(realm, decoratedStack), false);\n\n    errorLocation.stackDecorated = true;\n  }\n\n  function getBreakOnSigintArg(options: Value): boolean {\n    if (options instanceof UndefinedValue || options instanceof StringValue) {\n      return false;\n    }\n    if (!(options instanceof ObjectValue)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"options must be an object\");\n    }\n\n    let value = Get(realm, options, \"breakOnSigint\");\n    invariant(value instanceof ConcreteValue);\n    return value instanceof BooleanValue && value.value;\n  }\n\n  function getTimeoutArg(options: Value): number {\n    if (options instanceof UndefinedValue || options instanceof StringValue) {\n      return -1;\n    }\n    if (!(options instanceof ObjectValue)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"options must be an object\");\n    }\n\n    let value = Get(realm, options, \"timeout\");\n    invariant(value instanceof ConcreteValue);\n    if (value instanceof UndefinedValue) {\n      return -1;\n    }\n    let timeout = ToInteger(realm, value);\n\n    if (timeout <= 0) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.RangeError, \"timeout must be a positive number\");\n    }\n\n    return timeout;\n  }\n\n  function getDisplayErrorsArg(options: Value): boolean {\n    if (options instanceof UndefinedValue || options instanceof StringValue) {\n      return true;\n    }\n    if (!(options instanceof ObjectValue)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"options must be an object\");\n    }\n\n    let value = Get(realm, options, \"displayErrors\");\n    invariant(value instanceof ConcreteValue);\n    if (value instanceof UndefinedValue) {\n      return true;\n    }\n    return ToBoolean(realm, value);\n  }\n\n  function getFilenameArg(options: Value): string {\n    const defaultFilename = \"evalmachine.<anonymous>\";\n    if (options instanceof UndefinedValue) {\n      return defaultFilename;\n    }\n    if (options instanceof StringValue) {\n      return options.value;\n    }\n    if (!(options instanceof ObjectValue)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"options must be an object\");\n    }\n\n    let value = Get(realm, options, \"filename\");\n    invariant(value instanceof ConcreteValue);\n    if (value instanceof UndefinedValue) {\n      return defaultFilename;\n    }\n    return ToString(realm, value);\n  }\n\n  function getCachedData(options: Value): Uint8Array {\n    if (!(options instanceof ObjectValue)) {\n      return new Uint8Array(0);\n    }\n\n    let value = Get(realm, options, \"cachedData\");\n    invariant(value instanceof ConcreteValue);\n    if (value instanceof UndefinedValue) {\n      return new Uint8Array(0);\n    }\n\n    if (!value.$ViewedArrayBuffer || !(value.$ViewedArrayBuffer.$ArrayBufferData instanceof Uint8Array)) {\n      throw realm.createErrorThrowCompletion(\n        realm.intrinsics.TypeError,\n        \"options.cachedData must be a Buffer instance\"\n      );\n    }\n\n    return value.$ViewedArrayBuffer.$ArrayBufferData;\n  }\n\n  function getProduceCachedData(options: Value): boolean {\n    if (!(options instanceof ObjectValue)) {\n      return false;\n    }\n\n    let value = Get(realm, options, \"produceCachedData\");\n    invariant(value instanceof ConcreteValue);\n    return value instanceof BooleanValue && value.value;\n  }\n\n  function getLineOffsetArg(options: Value): number {\n    const defaultLineOffset = 0;\n    if (!(options instanceof ObjectValue)) {\n      return defaultLineOffset;\n    }\n    let value = Get(realm, options, \"lineOffset\");\n    invariant(value instanceof ConcreteValue);\n    return value instanceof UndefinedValue ? defaultLineOffset : ToInteger(realm, value);\n  }\n\n  function getColumnOffsetArg(options: Value): number {\n    const defaultColumnOffset = 0;\n    if (!(options instanceof ObjectValue)) {\n      return defaultColumnOffset;\n    }\n    let value = Get(realm, options, \"columnOffset\");\n    invariant(value instanceof ConcreteValue);\n    return value instanceof UndefinedValue ? defaultColumnOffset : ToInteger(realm, value);\n  }\n\n  function evalMachine(self: Value, timeout: number, displayErrors: boolean, breakOnSigint: boolean): Value {\n    if (!(self instanceof ObjectValue) || !(self.$InternalSlot instanceof ContextifyScriptInternal)) {\n      throw realm.createErrorThrowCompletion(\n        realm.intrinsics.Error,\n        \"Script methods can only be called on script instances.\"\n      );\n    }\n    let script = (self.$InternalSlot: ContextifyScriptInternal);\n\n    let environment = realm.$GlobalEnv;\n\n    let previousContext = realm.getRunningContext();\n    previousContext.suspend();\n\n    let context = realm.createExecutionContext();\n    context.lexicalEnvironment = environment;\n    context.variableEnvironment = environment;\n    context.realm = realm;\n\n    realm.pushContext(context);\n\n    let result;\n    try {\n      result = environment.evaluateCompletion(script.ast, false);\n    } finally {\n      context.suspend();\n      realm.popContext(context);\n    }\n    invariant(realm.getRunningContext() === previousContext);\n    previousContext.resume();\n\n    if (result instanceof EmptyValue) {\n      return realm.intrinsics.undefined;\n    } else if (result instanceof Value) {\n      return result;\n    } else {\n      invariant(result instanceof AbruptCompletion);\n      if (displayErrors) {\n        decorateErrorStack(result);\n      }\n      throw result;\n    }\n  }\n\n  let ContextifyScriptPrototype = new ObjectValue(\n    realm,\n    realm.intrinsics.ObjectPrototype,\n    `${intrinsicName}.ContextifyScript.prototype`\n  );\n\n  ContextifyScriptPrototype.defineNativeMethod(\"runInContext\", 2, runInContext);\n  ContextifyScriptPrototype.defineNativeMethod(\"runInThisContext\", 1, runInThisContext);\n\n  DefinePropertyOrThrow(realm, ContextifyScript, \"prototype\", {\n    value: ContextifyScriptPrototype,\n    writable: true,\n    enumerable: false,\n    configurable: false,\n  });\n\n  DefinePropertyOrThrow(realm, ContextifyScriptPrototype, \"constructor\", {\n    value: ContextifyScript,\n    writable: true,\n    enumerable: false,\n    configurable: true,\n  });\n\n  return obj;\n}\n"]}