{"version":3,"sources":["../../src/values/SymbolValue.js"],"names":["SymbolValue","realm","desc","intrinsicName","$Description","Symbol"],"mappings":";;;;;;;;AAWA;;;;;;+eAXA;;;;;;;;;IAcqBA,W;;;AACnB,uBAAYC,KAAZ,EAA0BC,IAA1B,EAA8CC,aAA9C,EAAsE;AAAA;;AAAA,0HAC9DF,KAD8D,EACvDE,aADuD;;AAEpE,UAAKC,YAAL,GAAoBF,IAApB;AAFoE;AAGrE;;;;mCAIuB;AACtB,aAAO,KAAP;AACD;;;+CAEuC;AACtC,aAAO,IAAP;AACD;;;iCAEoB;AACnB,aAAOG,OAAO,KAAKD,YAAZ,CAAP;AACD;;;;;;kBAlBkBJ,W","file":"SymbolValue.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport { PrimitiveValue, Value } from \"./index.js\";\nimport type { Realm } from \"../realm.js\";\n\nexport default class SymbolValue extends PrimitiveValue {\n  constructor(realm: Realm, desc: void | Value, intrinsicName?: string) {\n    super(realm, intrinsicName);\n    this.$Description = desc;\n  }\n\n  $Description: void | Value;\n\n  mightBeFalse(): boolean {\n    return false;\n  }\n\n  throwIfNotConcreteSymbol(): SymbolValue {\n    return this;\n  }\n\n  _serialize(): Symbol {\n    return Symbol(this.$Description);\n  }\n}\n"]}